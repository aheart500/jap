{"version":3,"sources":["components/Header.jsx","components/NewOrder.jsx","contexts/ServicesContext/ServicesContext.js","components/Status.jsx","App.js","serviceWorker.js","contexts/ServicesContext/servicesReducer.js","contexts/ServicesContext/ServicesState.js","index.js"],"names":["header","React","memo","balance","Transition","forwardRef","props","ref","Slide","direction","useStyle","makeStyles","theme","formControl","marginBottom","select","backgroundColor","width","breakpoints","down","formControlLabel","marginRight","fontFamily","fontSize","color","formControlLabel2","helperText","textAlign","textField","textIndent","left","submitButton","services","Add","classes","useState","category","service","link","quantity","retail","runs","interval","data","setData","errors","setErrors","confirmationOpen","setConfirmationOpen","toggleConfirmation","setConfirmed","toggleResult","setResultOpen","resultOpen","confirmed","result","setResult","handleChange","e","target","name","value","total","price","rate","type","categories","Set","map","s","proceedPayment","a","res","order","console","log","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Divider","className","isNaN","toString","FormControlLabel","control","Checkbox","checked","onChange","label","DialogActions","Button","onClick","variant","disabled","Alert","severity","onSubmit","preventDefault","newErrors","push","length","window","scrollTo","i","key","style","FormControl","htmlFor","Select","inputProps","labelId","MenuItem","FormHelperText","filter","serv","TextField","min","max","ServicesContext","createContext","field","marginLeft","right","button","dialog","Status","check","setOpen","orderId","setOrderId","handleClose","handleOpen","paper","charge","start_count","status","remains","App","useContext","servicesState","getBalance","getServices","checkStatus","useEffect","Header","Boolean","location","hostname","match","ServicesReducer","state","action","payload","ServicesState","children","useReducer","dispatch","axios","post","get","Provider","then","catch","err","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.39d3fbaf.chunk.js","sourcesContent":["import React from \"react\";\n\nconst header = React.memo(({ balance }) => {\n  return <header>رصيدك : {balance}</header>;\n});\n\nexport default header;\n","import React, { useState } from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyle = makeStyles((theme) => ({\n  formControl: {\n    marginBottom: \"1rem\",\n  },\n  select: {\n    backgroundColor: \"#fff\",\n    width: \"60%\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\",\n    },\n  },\n  formControlLabel: {\n    marginRight: \"0\",\n    \"& span\": {\n      fontFamily: \"Cairo\",\n      fontSize: \"1.2rem\",\n      color: \"#fff\",\n    },\n  },\n  formControlLabel2: {\n    marginRight: \"0\",\n    \"& span\": {\n      fontFamily: \"Cairo\",\n    },\n  },\n  helperText: {\n    fontSize: \"0.9rem\",\n    fontFamily: \"Cairo\",\n    textAlign: \"right\",\n  },\n  textField: {\n    backgroundColor: \"#fff\",\n    width: \"60%\",\n    direction: \"ltr\",\n    \"& input\": {\n      textIndent: \"10px\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\",\n    },\n    \"& .MuiInputLabel-formControl\": {\n      left: \"unset\",\n    },\n  },\n  submitButton: {\n    width: \"60%\",\n    fontSize: \"1.2rem\",\n    fontFamily: \"Cairo\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\",\n    },\n  },\n}));\nconst NewOrder = ({ services, Add }) => {\n  const classes = useStyle();\n  const [data, setData] = useState({\n    category: \"\",\n    service: \"\",\n    link: \"\",\n    quantity: \"\",\n    retail: false,\n    runs: \"\",\n    interval: \"\",\n  });\n  const [errors, setErrors] = useState([]);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const toggleConfirmation = () => {\n    setConfirmed(false);\n    setConfirmationOpen(!confirmationOpen);\n  };\n  const toggleResult = () => setResultOpen(!resultOpen);\n  const [confirmed, setConfirmed] = useState(false);\n  const [resultOpen, setResultOpen] = useState(false);\n  const [result, setResult] = useState({});\n  const handleChange = (e) => {\n    if (e.target.name === \"category\") {\n      setData({\n        ...data,\n        service: \"\",\n        [e.target.name]: e.target.value,\n      });\n    } else {\n      setData({\n        ...data,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let newErrors = [];\n    if (data.category === \"\") {\n      newErrors.push(\"برجاء تحديد نوع الخدمة\");\n    }\n    if (data.service === \"\") {\n      newErrors.push(\"برجاء تحديد الخدمة\");\n    }\n    if (data.link === \"\") {\n      newErrors.push(\"برجاء إدخال الرابط\");\n    }\n    if (data.quantity === \"\") {\n      newErrors.push(\"برجاء تحديد الكمية\");\n    }\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      window.scrollTo(0, 0);\n    } else {\n      toggleConfirmation();\n    }\n  };\n\n  const total = data.quantity * data.runs;\n  let price = data.runs\n    ? data.runs * data.service.rate * data.quantity\n    : data.quantity * data.service.rate;\n  price = price / 1000;\n  if (data.service.type === \"Custom Comments\") price = price / 100;\n\n  const categories = [...new Set(services.map((s) => s.category))];\n  const proceedPayment = async () => {\n    setResult({});\n    try {\n      const res = await Add(data);\n\n      if (res.data.order) {\n        setResult({ type: \"success\", order: res.data.order });\n        setConfirmationOpen(false);\n        setResultOpen(true);\n        setData({\n          category: \"\",\n          service: \"\",\n          link: \"\",\n          quantity: \"\",\n          retail: false,\n          runs: \"\",\n          interval: \"\",\n        });\n      } else {\n        setResult({ type: \"failure\" });\n        setConfirmationOpen(false);\n        setResultOpen(true);\n      }\n    } catch (err) {\n      setResult({ type: \"failure\" });\n      setConfirmationOpen(false);\n      setResultOpen(true);\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={confirmationOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={toggleConfirmation}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">تأكيد البيانات</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            برجاء التأكد من جميع البيانات قبل إكمال العملية حيث أن الموقع غير\n            مسؤل عن أية أخطاء في البيانات\n          </DialogContentText>\n          <Divider />\n          <div className=\"confirmationDia\">\n            <div className=\"row\">\n              <div className=\"right-col\">رقم الخدمة</div>\n              <div>{data.service.service}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> اسم الخدمة</div>\n              <div>{data.service.name}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> الرابط</div>\n              <div>{data.link}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> الكمية</div>\n              <div>{data.quantity}</div>\n            </div>\n            {data.runs > 0 && (\n              <div className=\"row\">\n                <div className=\"right-col\"> عدد المرات</div>\n                <div>{data.runs}</div>\n              </div>\n            )}\n            <div className=\"row\">\n              <div className=\"right-col\"> السعر</div>\n              <div>{`$${isNaN(price) ? \"\" : price.toString()}`}</div>\n            </div>\n            <Divider />\n            <div className=\"row\">\n              <FormControlLabel\n                className={classes.formControlLabel2}\n                control={\n                  <Checkbox\n                    checked={confirmed}\n                    onChange={(e) => setConfirmed(e.target.checked)}\n                    name=\"checkedA\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"لقد قرأت البيانات جيداً وهي صحيحة\"\n              />\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={toggleConfirmation}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            الغاء\n          </Button>\n          <Button\n            onClick={proceedPayment}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!confirmed}\n            className=\"payBtn\"\n          >\n            إتمام الدقع\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={resultOpen}\n        onClose={toggleResult}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {result.type === \"success\" ? \"تمت العملية بنجاح\" : \"خطأ\"}\n        </DialogTitle>\n        <DialogContent>\n          {result.type === \"success\" ? (\n            <Alert severity=\"success\">{`تم إتمام العملية بنجاح. برجاء الإحنفاظ برقم الطلب لتتبع حالته لاحقاً \"${result.order}\"`}</Alert>\n          ) : (\n            <Alert severity=\"error\">\n              حدث خطأ أثناء القيام بالعملية برجاء المحاولة في وقت لاحق\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleResult} variant=\"contained\" color=\"primary\">\n            تم\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <form className=\"new-order\" onSubmit={handleSubmit}>\n        {errors.map((e, i) => (\n          <Alert key={i} severity=\"error\" style={{ marginBottom: \"0.5rem\" }}>\n            {e}\n          </Alert>\n        ))}\n        <FormControl className={classes.formControl}>\n          <label htmlFor=\"category\" id=\"category\">\n            نوع الخدمة\n          </label>\n          <Select\n            value={data.category}\n            onChange={handleChange}\n            inputProps={{ name: \"category\" }}\n            className={classes.select}\n            labelId=\"category\"\n          >\n            {categories.map((category, i) => {\n              return (\n                <MenuItem value={category} key={i}>\n                  {category}\n                </MenuItem>\n              );\n            })}\n          </Select>\n          <FormHelperText className={classes.helperText}>\n            اختر نوع الخدمة التي تريد شرائها\n          </FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <label htmlFor=\"service\" id=\"service\">\n            الخدمة\n          </label>\n          <Select\n            value={data.service}\n            onChange={handleChange}\n            inputProps={{ name: \"service\" }}\n            className={classes.select}\n            labelId=\"service\"\n            disabled={data.category === \"\"}\n          >\n            {services\n              .filter((service) => service.category === data.category)\n              .map((serv, i) => {\n                return (\n                  <MenuItem value={serv} key={i}>\n                    {`${serv.service} ${serv.name}`}\n                  </MenuItem>\n                );\n              })}\n          </Select>\n          <FormHelperText className={classes.helperText}>\n            اختر الخدمة التي تريد شرائها\n          </FormHelperText>\n        </FormControl>\n        <div className=\"service-desc\">\n          <span>وصف الخدمة</span>\n          <br />\n          <p>\n            ضحك ضحك ضحك ضحكضحك ضحكضحك ضحكضحك ضحكضحك\n            <br />\n            ضحكضحك ضحكضحك ضحكضحك ضحك\n          </p>\n        </div>\n        <FormControl className={classes.formControl}>\n          <label htmlFor=\"link\">الرابط</label>\n          <TextField\n            className={classes.textField}\n            id=\"link\"\n            inputProps={{\n              name: \"link\",\n            }}\n            value={data.link}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <label htmlFor=\"quantity\">الكمية</label>\n          <TextField\n            className={classes.textField}\n            id=\"quantity\"\n            inputProps={{\n              name: \"quantity\",\n            }}\n            type=\"number\"\n            value={data.quantity}\n            onChange={handleChange}\n          />\n          {data.service && (\n            <FormHelperText className={classes.helperText}>\n              {`الحد الأدني: ${data.service.min} - الحد الأقصي: ${data.service.max}`}\n            </FormHelperText>\n          )}\n        </FormControl>\n        {data.service.type === \"Default\" && (\n          <>\n            <FormControl className={classes.formControl}>\n              <FormControlLabel\n                className={classes.formControlLabel}\n                control={\n                  <Checkbox\n                    checked={data.retail}\n                    onChange={() =>\n                      setData({\n                        ...data,\n                        retail: !data.retail,\n                        runs: \"\",\n                        interval: \"\",\n                      })\n                    }\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"الشراء بالتقسيط\"\n              />\n            </FormControl>\n            {data.retail && data.service !== \"\" && (\n              <>\n                <FormControl className={classes.formControl}>\n                  <label htmlFor=\"runs\">عدد المرات</label>\n                  <TextField\n                    className={classes.textField}\n                    id=\"runs\"\n                    inputProps={{\n                      name: \"runs\",\n                    }}\n                    type=\"number\"\n                    value={data.runs}\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <label htmlFor=\"interval\">الفاصل الزمني (بالدقائق)</label>\n                  <TextField\n                    className={classes.textField}\n                    id=\"interval\"\n                    inputProps={{\n                      name: \"interval\",\n                    }}\n                    type=\"number\"\n                    value={data.interval}\n                    onChange={handleChange}\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <label htmlFor=\"total\">الكمية الإجمالية</label>\n                  <TextField\n                    className={classes.textField}\n                    id=\"total\"\n                    inputProps={{\n                      name: \"total\",\n                    }}\n                    value={total.toString()}\n                    disabled\n                  />\n                </FormControl>\n              </>\n            )}\n          </>\n        )}\n\n        <FormControl className={classes.formControl}>\n          <label htmlFor=\"price\">السعر</label>\n          <TextField\n            className={classes.textField}\n            id=\"price\"\n            inputProps={{\n              name: \"price\",\n            }}\n            value={`$${isNaN(price) ? \"\" : price.toString()}`}\n            disabled\n          />\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n        >\n          تنفيذ\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default React.memo(NewOrder);\n","import { createContext } from \"react\";\n\nconst ServicesContext = createContext();\nexport default ServicesContext;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyle = makeStyles(() => ({\n  field: {\n    width: \"50%\",\n    marginLeft: \"1rem\",\n    \"& .MuiInputLabel-formControl\": {\n      right: \"1rem\",\n      left: \"unset\",\n      fontFamily: \"Cairo !important\",\n    },\n  },\n  button: {\n    fontSize: \"1.2rem\",\n    fontFamily: \"Cairo\",\n  },\n  dialog: {\n    width: \"20rem\",\n    \"& .right-col\": {\n      width: \"40%\",\n    },\n  },\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst Status = ({ check }) => {\n  const [open, setOpen] = useState(false);\n  const [orderId, setOrderId] = useState(\"\");\n  const [data, setData] = useState({});\n\n  const classes = useStyle();\n  const handleClose = () => setOpen(false);\n  const handleOpen = async () => {\n    try {\n      const result = await check(orderId);\n\n      setOpen(true);\n      setData(result.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        classes={{\n          paper: classes.dialog,\n        }}\n        onClose={handleClose}\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">حالة الطلب</DialogTitle>\n        <DialogContent>\n          <Divider />\n          <div className=\"confirmationDia\">\n            <div className=\"row\">\n              <div className=\"right-col\">المستخدم</div>\n              <div>{data.charge}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> رقم البداية</div>\n              <div>{data.start_count}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> الحالة</div>\n              <div>\n                {data.status === \"Completed\"\n                  ? \"مكتمل\"\n                  : data.status === \"In progress\"\n                  ? \"جاري التنفيذ\"\n                  : data.status === \"Partial\"\n                  ? \"مكتمل جزئي\"\n                  : data.status === \"Canceled\"\n                  ? \"ملغي\"\n                  : \"فشل\"}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"right-col\"> المتبقي</div>\n              <div>{data.remains}</div>\n            </div>\n          </div>\n\n          <Divider />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            تم\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <form className=\"status\">\n        <TextField\n          variant=\"filled\"\n          className={classes.field}\n          value={orderId}\n          label=\"رقم الطلب\"\n          onChange={(e) => setOrderId(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          type=\"button\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={handleOpen}\n        >\n          تتبع الطلب\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Status;\n","import React, { useContext, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport NewOrder from \"./components/NewOrder\";\nimport ServicesContext from \"./contexts/ServicesContext/ServicesContext\";\nimport Status from \"./components/Status\";\nconst App = () => {\n  const {\n    servicesState,\n    getBalance,\n    getServices,\n    Add,\n    checkStatus,\n  } = useContext(ServicesContext);\n  useEffect(() => {\n    getBalance();\n  }, []); //eslint-disable-line\n  useEffect(() => {\n    getServices();\n  }, []); //eslint-disable-line\n  return (\n    <div className=\"app\">\n      <Header balance={servicesState.balance} />\n      <NewOrder services={servicesState.services} Add={Add} />\n      <Status check={checkStatus} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default function ServicesReducer(state, action) {\n  switch (action.type) {\n    case \"services\":\n      return { ...state, services: action.payload };\n    case \"balance\":\n      return { ...state, balance: action.payload };\n    default:\n      return state;\n  }\n}\n","import React, { useReducer } from \"react\";\nimport ServicesContex from \"./ServicesContext\";\nimport ServicesReducer from \"./servicesReducer\";\nimport axios from \"axios\";\nconst ServicesState = ({ children }) => {\n  const [state, dispatch] = useReducer(ServicesReducer, {\n    services: [],\n    balance: \"0.00\",\n  });\n  const getServices = () => {\n    axios\n      .get(\"/api/services\")\n      .then((res) => {\n        dispatch({ type: \"services\", payload: res.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getBalance = () => {\n    axios\n      .get(\"/api/balance\")\n      .then((res) => {\n        dispatch({ type: \"balance\", payload: res.data.balance });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const Add = async (data) => {\n    const result = axios.post(\"/api/order\", data);\n    return result;\n  };\n  const checkStatus = async (id) => {\n    const result = axios.get(\"/api/order/\" + id);\n    return result;\n  };\n  return (\n    <ServicesContex.Provider\n      value={{\n        servicesState: state,\n        getServices,\n        getBalance,\n        Add,\n        checkStatus,\n      }}\n    >\n      {children}\n    </ServicesContex.Provider>\n  );\n};\n\nexport default ServicesState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ServicesState from \"./contexts/ServicesContext/ServicesState\";\n\nReactDOM.render(\n  <ServicesState>\n    <App />\n  </ServicesState>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}